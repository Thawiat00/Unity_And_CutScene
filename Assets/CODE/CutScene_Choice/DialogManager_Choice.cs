using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using TMPro;

public class DialogManager_choice : MonoBehaviour
{
    // Structs ???? Classes ???????????????? JSON
    [System.Serializable]
    public class Dialog_choice
    {
        public string girl;
        public string boy;
        public List<string> cutscene_choice;
        public string End_dialog;
    }

    [System.Serializable]
    public class Root_choice
    {
        public List<Dialog_choice> dialog_cs_OC;
    }

    private Root_choice dialogData_choice;
    private List<string> dialogQueue_choice = new List<string>(); // ?????????????????????????
    private int dialogIndex = 0; // ????????????????????

    public TextMeshProUGUI dialogText; // ?????????????????????? Unity UI

    void Start()
    {
        LoadDialogData_choice();
        PrepareDialogQueue_choice(); // ??????????????????????????? JSON
        ShowNextDialog(); // ???????????????????
    }


    void Update()
    {
        // ??????????????????? Spacebar ???????
        if (Input.GetKeyDown(KeyCode.Space))
        {
            ShowNextDialog(); // ??????????????????????? Spacebar
        }
    }

    void LoadDialogData_choice()
    {
        // ???? JSON ??????? Resources ????????????
        TextAsset jsonFile = Resources.Load<TextAsset>("dialog_cutscene_choice");

        if (jsonFile != null)
        {
            string jsonContent = jsonFile.text;
            dialogData_choice = JsonUtility.FromJson<Root_choice>(jsonContent);
            Debug.Log("JSON Loaded Successfully from Resources");
        }
        else
        {
            Debug.LogError("Cannot find JSON file in Resources folder");
        }
    }


    void PrepareDialogQueue_choice()
    {
        // ????????????????? boy ??? girl ?????????? JSON
        if (dialogData_choice != null)
        {
            foreach (var dialog in dialogData_choice.dialog_cs_OC)
            {
                if (!string.IsNullOrEmpty(dialog.girl))
                {
                    dialogQueue_choice.Add(dialog.girl);
                }

                if (!string.IsNullOrEmpty(dialog.boy))
                {
                    dialogQueue_choice.Add(dialog.boy);
                }
            }
        }
    }

    // ???????????????????????????????????
    void ShowNextDialog()
    {
        if (dialogQueue_choice.Count > 0 && dialogIndex < dialogQueue_choice.Count)
        {
            dialogText.text = dialogQueue_choice[dialogIndex]; // ??????????????????????????
            dialogIndex++; // ?????????????????
        }
        else
        {
            Debug.Log("End of dialog");
            dialogText.text = "End of dialog"; // ?????????????????????
        }
    }

    // ???????????????????????????????????????????????????????????
    public void OnNextButtonClicked()
    {
        ShowNextDialog();
    }
}
